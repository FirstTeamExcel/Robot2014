Add a spin while lifting flipper


Enable Arm 5v stuff
AutoShift chooser, use abs value
Add Cheesy/Tank chooser
Fix AutoChooser?
Test Backward auto




Install 5v jumper
First Pit Test spin up times; tune our RPMs based on the desired spin up time.
	-Single shot auton should be that highest reasonable RPM
	-Long shot should have a sub 2 sec spin up, ideally 1 - 1.5 sec
	-Close auton may need to be tuned to peak at the correct time. 
(Record spinup times starting at max RPM and working down to reasonable times)
Also test auto shift routine briefly, see if the thresholds make sense
Go to practice field, tune angle so that shots peak at the goal height at the given RPM
Then find the distance for that shot
Manually position for our different shots, adjust angle and maintain speed.





Lift shooter during collect?
Enable upshift after spin up
Disable PID when voltage is too low
Add printfs to Fire to determine failure modes
Reduce D on PID when moving up


Short shot should also lift collector
Implement inverted cheesy
Reenable low gear while spin up; add a toggle so that the low gear button becomes a high gear button
Add collector spit/collect button to the drive controls b and y
DriveToEncoder needs to use abs(sensorCount) rather than the raw value, this way the direction doesn't matter
CollectThenFlip should check the trigger in execute and end, if the trigger is never hit don't lift the flipper 'isHit = flipperTrigger.Get()' 'if (isHit) flipper.Set(up)'
Implement ManualRollerControl, which should lower the flipper, then read the operator joystick to control rollers, this can serve as a manual flipper down button as well
Implement ManualFlipperUp command, which is pretty self explanitory.
CollectUntilTrigger should inherit CollectThenFlip, and should override IsFinished to check hasTriggered; and should unconditionally raise the flipper in the interrupt routine.


3/20/14
Add CollectThenFlip which puts the flipper down when the command starts, and back up when it ends
Add CollectUntilTrigger which puts the flipper down when the command starts, and ends the command when it is triggered. Flipper should be up at the end, 
Add Gyro and encoders back to drivetrain
DriveTwoBall

3/13/14:
Flipper Code
Logitech f310
Fixed Shot range lights
Remove image printf's
Potential code for different PID values going upward
Auto Arm and Speed control 

Here is a summary of the flipper logic:

    When we begin collecting or ejecting with the collector, the flippers will lower (if it isn't already down)
    While we are collecting, when the ball hits the switch the flipper will come up (any other time, the switch would be completely ignored, it's only while we are collecting that we read it at all)
    When we set the arm to load position, the flipper will come up (if it isn't already up)
    Starting position will lift the flipper up


2/15/14:
Remove EjectBall position and eject ball stuff
In ShooterSpinUp, change the LoadPosition so that it ejects the ball (sets EjectPower) 
In Fire, if the collector is in eject position, also call collector spit
Fix the collector







2/13/14:

Wiring TODO list:
Make split PWMs for all speed controllers
Reverse PWMs for ARM and collector
Wire Gyro/Accel
Order parts for hall sensors
Make Split 2xPWMs 
Install 2xVictors



Code TO DO List:
Add i2c accelerometer 
+ Update analog pins (1=Potentiometer, 2 = gyro, 3 = accellerometer)
+ Add the DetectHotGoal command back into robot builder, this should call DetectHotGoal in execute, then set _done to true, IsFinished should return _done
Tweak shooter arm control loop
+ Add a PoweredShot command
In ShooterWheelsSpinUp, 
	(+) Add code to read the operator joystick x axis (range is -1 to 1), 
	(+) Scale the x axis down to +- MAX_BIAS parameter (which should be added to ShooterWheelsSpeeds.h, set the value to 0.2)
	(+) Get the +- sign on the bias correct (a positive bias spins the right wheel faster, throwing the ball left)
	(+)Feed the bias into the target RPM function for the Teleop shots

 + In Camera.cpp when we detect the hot goal, save the value to a class variable 
	+ add a Getter function for it, 
	+ initialize the value to notDetected in the constructor
	







Do the math for camera view: 
	(Field Layout: http://www.usfirst.org/sites/default/files/uploadedFiles/Robotics_Programs/FRC/Game_and_Season__Info/2014/FE-00037_RevA.pdf)
	The camera has a 67deg horizontal field of view (33.5deg in either direction)
	The field is 24 ft. 8 in. wide, the hot goal tape is 1 ft. 11.5 in. wide, and is 3.75" from the edge of the field.
	Our autonomous starting position is between 216" and 324"
	Can we see the entire hot goal tape from the center of the field?
	How far left, right, or back would we need to move to see it?
	
Other stuff:
+ In ShooterArm subsystem, PID to motor command function, instead of output * 1-cos(angle), use output - (output * cos(angle))
Figure out if trig functions are intended for degrees or radians

Camera::GetRange function?


Tune the three PID systems (Arm, Turning, DriveStraight)
Find our shot RPMs
Test vision for hot goal
