// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "ShooterWheelsManualControl.h"
#include "../ShooterWheelsSpeeds.h"
#include "../Subsystems/ShooterWheels.h"
ShooterWheelsManualControl::ShooterWheelsManualControl() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::shooterWheels);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// Called just before this Command runs the first time
void ShooterWheelsManualControl::Initialize() {
	
}
// Called repeatedly when this Command is scheduled to run
void ShooterWheelsManualControl::Execute() {
	
	//Should we have a joystick button to toggle a "Manual Mode?" If off, the throttle can't control the wheels
    Joystick* opStick = Robot::oi->getoperatorStick();
    
	if ((opStick->GetThrottle()) && (Robot::shooterWheels->IsShotComplete()))
	{
        float targetSpeed = (opStick->GetThrottle() + 1) * -0.5;
        Robot::shooterWheels->SetTargetRpm(targetSpeed);	//Include the bias? (in the SetTargetRpm method)
	}
}
// Make this return true when this Command no longer needs to run execute()
bool ShooterWheelsManualControl::IsFinished() {
    return false;
}
// Called once after isFinished returns true
void ShooterWheelsManualControl::End() {
	
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ShooterWheelsManualControl::Interrupted() {
}
