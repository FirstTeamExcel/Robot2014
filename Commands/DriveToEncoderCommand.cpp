// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


#include "DriveToEncoderCommand.h"
#include "../Subsystems/DriveSubsystem.h"
#include "Math.h"

DriveToEncoderCommand::DriveToEncoderCommand(int encoderCount) {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveSubsystem);
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	
	//save encoderCount to a class variable
	_stopEncoderCount = encoderCount;
}

// Called just before this Command runs the first time
void DriveToEncoderCommand::Initialize() {
	//reset gyro, and both encoders
	Robot::driveSubsystem->driveGyro->Reset();
	Robot::driveSubsystem->rightEncoder->Reset();
	Robot::driveSubsystem->leftEncoder->Reset();
	
}

// Called repeatedly when this Command is scheduled to run
void DriveToEncoderCommand::Execute() {

		    Robot::driveSubsystem->DriveStraight(0.5);
		    
		    //return true;
}

// Make this return true when this Command no longer needs to run execute()
bool DriveToEncoderCommand::IsFinished() {
	//return true if encoder counts of the encoder are greater than encoderCount passed into the constructor 
	if ((Robot::driveSubsystem->rightEncoder->Get() > _stopEncoderCount) && (Robot::driveSubsystem->leftEncoder->Get() > _stopEncoderCount))
	{
		return true;
	}
	return false;
}

// Called once after isFinished returns true
void DriveToEncoderCommand::End() {
	Robot::driveSubsystem->theDriveTrain->Drive(0.0, 0.0);
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void DriveToEncoderCommand::Interrupted() {
	End();
}
