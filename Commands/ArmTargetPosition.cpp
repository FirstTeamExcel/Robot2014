// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "ArmTargetPosition.h"
ArmTargetPosition::ArmTargetPosition(ShooterArm::ShooterArmPosition target) {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::shooterArm);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	_targetPosition = target;
}
// Called just before this Command runs the first time
void ArmTargetPosition::Initialize() {
	
}
// Called repeatedly when this Command is scheduled to run
void ArmTargetPosition::Execute() {
    ShooterArm *arm = Robot::shooterArm;
    if (arm->GetTargetPosition() != _targetPosition)
    {
        arm->SetTargetPosition(_targetPosition);
    }
}
// Make this return true when this Command no longer needs to run execute()
bool ArmTargetPosition::IsFinished() {
    ShooterArm *arm = Robot::shooterArm;
    return (arm->GetTargetPosition() == _targetPosition) && arm->IsOnTarget();
}
// Called once after isFinished returns true
void ArmTargetPosition::End() {
	
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ArmTargetPosition::Interrupted() {
}
