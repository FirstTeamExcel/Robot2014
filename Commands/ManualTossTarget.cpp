// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


#include "ManualTossTarget.h"
#include "Math.h"
#include "../ShooterArmPositions.h"

ManualTossTarget::ManualTossTarget() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::shooterArm);
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

// Called just before this Command runs the first time
void ManualTossTarget::Initialize() {
	prevAngle = 0.0;
}

// Called repeatedly when this Command is scheduled to run
void ManualTossTarget::Execute() {
	Joystick *op = Robot::oi->getoperatorStick();
	
	float yFactor = (op->GetY() + 1.0) / (2.0);
	float angle = SHOOTER_ARM_TARGET_EJECT_POSITION + (90 * yFactor);
	float diff = fabs(angle - prevAngle);
	if (diff > 2.0)
	{
	    prevAngle = angle;
	    Robot::shooterArm->SetAngle(angle);
	}
}

// Make this return true when this Command no longer needs to run execute()
bool ManualTossTarget::IsFinished() {
	return false;
}

// Called once after isFinished returns true
void ManualTossTarget::End() {
	
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ManualTossTarget::Interrupted() {

}
